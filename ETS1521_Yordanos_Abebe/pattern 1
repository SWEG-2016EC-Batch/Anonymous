#include <iostream>
using namespace std;


void five_times();
void alphabets();
void pyramid_left();
void pyramid_right();
void alphabets_pyramid();
void five_alphabets();
void hollow();
void inverted_pyramid();
void hollow_pyramid();
void full();
void inverted_full();
void hollow_p();

int main() {
    int choice;

    
    do {
        cout << "* MENU *" << endl;
        cout << endl;
        cout << "Enter 1 to print natural numbers up to 5, 5 times." << endl;
        cout << "Enter 2 to print alphabets up to x, in 4 rows." << endl;
        cout << "Enter 3 to print natural numbers up to 5, 5 times in half pyramid to the left." << endl;
        cout << "Enter 4 to print natural numbers up to 5, 5 times in half pyramid to the right." << endl;
        cout << endl;
        cout << "Enter 5 to print alphabets up to e, 5 times in half pyramid." << endl;
        cout << "Enter 6 to print alphabets up to e, 5 times." << endl;
        cout << "Enter 7 to print hollow rectangle." << endl;
        cout << "Enter 8 to print inverted half pyramid." << endl;
        cout << endl;
        cout << "Enter 9 to print hollow inverted half pyramid." << endl;
        cout << "Enter 10 to print full pyramid." << endl;
        cout << "Enter 11 to print inverted full pyramid." << endl;
        cout << "Enter 12 to print hollow pyramid." << endl;
        cout << endl;

        int number;
        cout << "Please enter number to choose the patterns: ";
        cin >> number;

        
        while (cin.fail() || number < 1 || number > 12) {
            cout << "Please enter a valid number from the menu (1-12): ";
            cin.clear(); 
            cin.ignore(numeric_limits<streamsize>::max(), '\n'); 
            cin >> number;
        }

        switch (number) {
            case 1: five_times(); break;
            case 2: alphabets(); break;
            case 3: pyramid_left(); break;
            case 4: pyramid_right(); break;
            case 5: alphabets_pyramid(); break;
            case 6: five_alphabets(); break;
            case 7: hollow(); break;
            case 8: inverted_pyramid(); break;
            case 9: hollow_pyramid(); break;
            case 10: full_(); break; 
            case 11: inverted_full(); break; 
            case 12: hollow_p(); break; 
        }

        cout << "Would you like to see more patterns? (0 / 1): ";
        cin >> choice;

    } while (choice == 1);

    cout << "Goodbye! :(" << endl;

    return 0;
}

void five_times() {
    cout << endl << "Pattern 1" << endl << endl;
    for (int i = 1; i <= 5; i++) {
        for (int j = 1; j <= 5; j++) {
            cout << j << " ";
        }
        cout << endl;
    }
}

void alphabets() {
    cout << endl << "Pattern 2" << endl;
    for (char i = 'A'; i <= 'X'; i++) {
        cout << i << " ";
        if ((i - 'A' + 1) % 6 == 0) { 
            cout << endl;
        }
    }
    cout << endl; 
}


void pyramid_left() {
    cout << endl << "Pattern 3" << endl;
    for (int i = 1; i <= 5; i++) {
        for (int j = 1; j <= i; j++) {
            cout << j << " ";
        }
        cout << endl;
    }
}

void pyramid_right() {
    cout << endl << "Pattern 4" << endl;
    for (int i = 1; i <= 5; i++) {
        for (int k = 5 - i; k > 0; k--) {
            cout << "  ";
        }
        for (int j = 1; j <= i; j++) { 
            cout << j << " ";
        }
        cout << endl;
    }
}


void alphabets_pyramid() {
    cout << endl << "Pattern 5" << endl;
    for (int i = 1; i <= 5; i++) {
        for (char j = 'A'; j < 'A' + i; j++) {
            cout << j << " ";
        }
        cout << endl;
    }
}


void five_alphabets() {
    cout << endl << "Pattern 6" << endl;
    for (int i = 1; i <= 5; i++) {
        cout << "a, b, c, d, e ";
        cout << endl;
    }
}


void hollow() {
    cout << endl << "Hollow Rectangle" << endl;
    for (int i = 1; i <= 6; i++) {
        for (int j = 1; j <= 7; j++) {
            if (j == 1 || j == 7 || i == 1 || i == 6) {
                cout << "* ";
            } else {
                cout << "  ";
            }
        }
        cout << endl;
    } 
}

void inverted_pyramid() {
    cout << endl << "Inverted Half Pyramid" << endl;
    for (int i = 0; i < 5; i++) {
        for (int j = 1; j <= (5 - i); j++) {
            cout << "* ";
        }
        cout << endl;
    }
}



void hollow_pyramid()
{
cout<<endl;
cout<<"hollow inverted half pyramid"<<endl;
for(int i= 6; i>=1; i--)
{
	for (int j= 1; j<=i; j++)
	{
		if(j==1||i==6|i==1||i==j)
		{
		cout<<"* ";
		}
		else 
		{
		cout<<"  ";
		}
	
	}
	cout<<endl;
}
}
void full()
{
cout<<endl;
cout<<"full pyramid "<<endl;

for(int i=1; i<=6; i++)
{
	for(int j = 1; j <=6-i ; j++)
	{
		cout<<"  ";
	}
	for(int k=1; k<=i; k++)
	{
	    cout<<"  * ";
	}
	cout<<endl;
}
}


void inverted_full()
{
cout<<endl;
cout<<"inverted full pyramid "<<endl;

for(int i=1; i<=6; i++)
{
	for(int j=1; j<=6-(6-i); j++)
	{
		cout<<"  ";
	}
	for(int k=0; k<=6-i; k++)
	{
		cout<<"  * ";
	}
cout<<endl;
}
}

void hollow_p()
{
cout<<endl;
cout<<"hollow pyramid"<<endl;
for(int i=1; i<=6; i++)
{
	for(int j=1; j<=6-i; j++)
	{
		cout<<"  ";
	}
	for(int k=1; k<=6-(6-i); k++)
	{
		if (i==6||k==1||k==6-(6-i))
		{
			cout<<"  * ";
		}
		else
		{
			cout<<"    ";
		}
	}
cout<<endl;
}
}


